{"version":3,"file":"static/js/383.ab0d69a8.chunk.js","mappings":"6OACA,EAAgC,oCAAhC,EAAuF,uCAAvF,EAA2I,iC,SCwF3I,EAlFqB,WACnB,OAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAsCJ,EAAAA,EAAAA,UACpC,uCADF,eAAOK,EAAP,KAAoBC,EAApB,KAGA,GAAwCN,EAAAA,EAAAA,YAAxC,eAAOO,EAAP,KAAqBC,EAArB,KACA,GAAgCR,EAAAA,EAAAA,UAAS,IAAzC,eAAOS,EAAP,KAAiBC,EAAjB,KACA,GAAwCV,EAAAA,EAAAA,UAAS,IAAjD,eAAOW,EAAP,KAAqBC,EAArB,KACA,GAA4BZ,EAAAA,EAAAA,WAAS,GAArC,eAAOa,EAAP,KAAeC,EAAf,KACQC,GAAOC,EAAAA,EAAAA,IAAU,IAAjBD,GACFE,GAAWC,EAAAA,EAAAA,MA4BjB,OA1BAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCL,EADnC,6DAEHM,MAAK,SAAAC,GAAQ,OACbA,EACGC,OACAF,MACC,YAOO,IANLlB,EAMI,EANJA,OACAE,EAKI,EALJA,YACAE,EAII,EAJJA,aACAE,EAGI,EAHJA,SACAR,EAEI,EAFJA,eACAU,EACI,EADJA,aAEAG,EAAUQ,EAASE,IACnBpB,EAAUD,GACVG,EAAe,sCAAD,OAAuCD,IACrDG,EAAgBiB,KAAKC,KAAoB,GAAfnB,IAC1BG,EAAYD,GACZP,EAAkBD,GAClBW,EAAgBD,EAAagB,MAAM,EAAG,GACvC,GAnBQ,GAsBhB,GAAE,CAACZ,KAEF,4BACE,oBAAQa,QAAS,kBAAMX,GAAU,EAAhB,EAAjB,WACE,SAAC,IAAD,CAAiBY,KAAMC,EAAAA,MADzB,aAICjB,IACC,4BACE,iBAAKkB,UAAWC,EAAhB,WACE,gBAAKC,IAAK5B,EAAa6B,IAAI,GAAGC,MAAM,QAAQC,OAAO,WACnD,iBAAKL,UAAWC,EAAhB,WACE,0BACG/B,EADH,KACqBU,EADrB,QAGA,wCAAgBJ,EAAhB,QACA,sCACA,uBAAIE,KACJ,oCACA,eAAIsB,UAAWC,EAAf,SACG7B,EAAOkC,KAAI,gBAAGtB,EAAH,EAAGA,GAAIuB,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAALvB,EADC,aAMlB,mBACA,mDACA,2BACE,yBACE,SAACwB,EAAA,EAAD,CAAYC,GAAG,OAAf,qBAEF,yBACE,SAACD,EAAA,EAAD,CAAYC,GAAG,UAAf,2BAGJ,mBACA,SAAC,KAAD,SAKT,C","sources":["webpack://goit-react-hw-05-movies/./src/component/MovieDetails/MovieDetails.module.css?c50c","component/MovieDetails/MovieDetails.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"containerMain\":\"MovieDetails_containerMain__kR1mo\",\"movieInformation\":\"MovieDetails_movieInformation__vtfQL\",\"genresList\":\"MovieDetails_genresList__SVics\"};","import { useEffect, useState } from 'react';\nimport { useParams, Outlet, useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReplyAll } from '@fortawesome/free-solid-svg-icons';\nimport { StyledLink } from '../../StyledLink/StyledLink';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [original_title, setOriginal_title] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [poster_path, setPoster_path] = useState(\n    'https://via.placeholder.com/200x300'\n  );\n  const [vote_average, setVote_average] = useState();\n  const [overview, setOverview] = useState('');\n  const [release_date, setRelease_date] = useState('');\n  const [status, setStatus] = useState(false);\n  const { id } = useParams('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=d8a03c709b4adc0e172e0837e1f73c29&language=en-US`\n    ).then(response =>\n      response\n        .json()\n        .then(\n          ({\n            genres,\n            poster_path,\n            vote_average,\n            overview,\n            original_title,\n            release_date,\n          }) => {\n            setStatus(response.ok);\n            setGenres(genres);\n            setPoster_path(`https://image.tmdb.org/t/p/original${poster_path}`);\n            setVote_average(Math.ceil(vote_average * 10));\n            setOverview(overview);\n            setOriginal_title(original_title);\n            setRelease_date(release_date.slice(0, 4));\n          }\n        )\n    );\n  }, [id]);\n  return (\n    <div>\n      <button onClick={() => navigate(-1)}>\n        <FontAwesomeIcon icon={faReplyAll} />\n        Go back\n      </button>\n      {status && (\n        <div>\n          <div className={css.containerMain}>\n            <img src={poster_path} alt=\"\" width=\"200px\" height=\"300px\" />\n            <div className={css.movieInformation}>\n              <h2>\n                {original_title} ({release_date})\n              </h2>\n              <p>User Scope: {vote_average}%</p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <ul className={css.genresList}>\n                {genres.map(({ id, name }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          <hr />\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <StyledLink to=\"cast\">Cast</StyledLink>\n            </li>\n            <li>\n              <StyledLink to=\"reviews\">Reviews</StyledLink>\n            </li>\n          </ul>\n          <hr />\n          <Outlet />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["useState","original_title","setOriginal_title","genres","setGenres","poster_path","setPoster_path","vote_average","setVote_average","overview","setOverview","release_date","setRelease_date","status","setStatus","id","useParams","navigate","useNavigate","useEffect","fetch","then","response","json","ok","Math","ceil","slice","onClick","icon","faReplyAll","className","css","src","alt","width","height","map","name","StyledLink","to"],"sourceRoot":""}